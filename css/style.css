/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* universal reset, gets rid of all browser-default styling weirdness */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* borders and paddings are no longer added to total height/width */
}

/* everything related to font should be specified in the body selector instead of universal */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7; /* 1.7 times bigger than the pre-defined line height */
  color: #777;
  padding: 30px; /* applies a 30px padding around the body only */
}


.header {
  height: 95vh; /* 95% of the viewport height */

  /* layering two background-images on top of each other */
  background-image: linear-gradient(
    to right bottom, /* directional gradient */
    rgba(126, 213, 111, 0.8),
    rgba(40, 180, 131, 0.8)
  ), url(../img/hero.jpg); 
  
  background-size: cover; /* scales image based on width of viewport */
  background-position: top; /* anchors by the top of the image */
  position: relative;
  
  /* TRIANGLE CHALLENGE: clip-path: polygon(0 0, 100% 50%, 0% 100%); */
  /* bennettfeely.com/clippy for clip-path maker */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* coordinates starting top left, moving clockwise for corners, format is {xpos ypos} */
}

.logo-box {
  position: absolute; /* calculates position based on parent element with position: relative */
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

/* instead of animating the logo directly, we animate the logo-box on hover only if it has a child logo class */
/*
  .logo-box:hover .logo {
    animation: moveInRight 1s ease-out;
  }
*/

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  text-align: center;

  /* transform: translate(x, y) shifts the position of the element */
  transform: translate(-50%, -50%); /* in this case, 50% refers to the height/width of the text-box element, rather than its parent */
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  backface-visibility: hidden; /* determines if the back part of an element, when transformed, is visible to the user */
  margin-bottom: 60px;
}

.heading-primary-main {
  /*
    by default, the span element is an inline property
    we want to change this to display as a block, because
    blocks inherently have line breaks before and after them 
  */
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;

  /* animation-delay: 3s; wait before animation play */
  /* animation-iteration-count: 3; times an animation occurs */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  animation: moveInRight 1s ease-out; /* name duration timing-function */
}

/* 
  two types of animations:
  - transition property
  - @keyframes rule
*/
@keyframes moveInLeft {
  0% {
    opacity: 0; /* for browser perf, best to animate only opacity and transform */
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.btn:link, /* link pseudoclass for anchor tags */
.btn:visited { /* visited pseudoclass for anchor tags after they've been visited */
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  border-radius: 100px;
  transition: all .2s; /* specify which properties to animate, and then duration */

  /* unlike block, inline-block does not add a line break after elements */
  display: inline-block; /* this means it'll be treated like text, so we can use text-align prop */

  backface-visibility: hidden;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0px 10px 10px rgba(0, 0, 0, .2); /* x y blur */
}

.btn:active { /* active class is on-click */
  transform: translateY(-1px);
  box-shadow: 0px 5px 5px rgba(0, 0, 0, .2); /* lessen values to make the button look closer */
}

.btn-white {
  background-color: #fff;
  color: #777;
}